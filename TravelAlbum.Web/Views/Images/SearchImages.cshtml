@model TravelAlbum.Web.Models.ImageModels.ImagesListViewModel
@using TravelAlbum.Web.Enums
@using TravelAlbum.Resources.App_GlobalResources

@using (Html.BeginForm("SearchImages", "Images", null, FormMethod.Get, new { @class = "form-horizontal", role = "form" }))
{
    <div class="search-container">
        @*
            <div class="form-group search-group">
                @Html.LabelFor(m => m.MountainsIds, new { @class = "control-label search-element" })

                @Html.ListBoxFor(model => model.MountainsIds, Model.MountainsDropDown, new { @class = "form-control", required = "required", data_placeholder = "Select one or more mountains." })
                @Html.ValidationMessageFor(model => model.Mountains, "", new { @class = "text-danger" })
                @Html.DropDownListFor(m => m.SportCategories, Model.SportCategoriesDropDown, new { @class = "form-control" })
            </div>
        *@

        <div class="search-group">
            @foreach (var g in Model.MountainsDropDown)
            {
                <div>
                    <input type="checkbox"
                           name="MountainsIds"
                           value="@g.Value" id="@g.Value" @if (Model.MountainsIds.Contains(new Guid(g.Value))) { <text> checked</text>
                       } />
                    <label for="@g.Value">@g.Text</label>
                </div>
            }
        </div>

        @*
        <div class="search-group">
            @Html.EnumDropDownListFor(a => a.SelectedSorting,
                    new SelectList(Enum.GetValues(typeof(Sorting))))
        </div>
            *@
        <div class="search-group">
            @Html.EnumDropDownListFor(a => a.SelectedSorting, "Select sorting", new { @class = "form-control" })
        </div>
        <input class="btn btn-primary search-group" value="@GlobalResources.SearchButtonLabel" type="submit">
    </div>

}


<div>
    <div id="single-images-container">
        @if (Model != null && Model.singleImagePreviews != null)
        {
            foreach (var singleImage in Model.singleImagePreviews)
            {
                <div class='single-image-container'>
                    <a href="@Url.Action("Details", "Images", new { id = singleImage.SingleImageId })">
                        <img class='single-image' src='data:image/jpg;base64,@singleImage.SingleImageData' />
                        <div class='cover-container'>
                        </div>
                    </a>
                    <div class='description'>@singleImage.CreatedOn </div>
                </div>
            }
        }
    </div>
</div>


@*
    @{Html.RenderPartial("_FacilityPartial", Model.Facilities);

        string url = Request.RawUrl.ToString();
        var parts = url.Split('/').ToList();
        var lastPart = parts[parts.Count - 1].Split('?').ToList();
        var id = lastPart[0];
        }


    <nav>
        <ul class="pagination">
            @if (Model.CurrentPage > 1)
            {
                <li>
                    <a href="/Facilties/FacilitiesPublic/SearchFacilities/@id?currentPage=@(Model.CurrentPage - 1)" aria-label="Previous">&laquo;</a>
                </li>
            }

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                var className = string.Empty;
                if (Model.CurrentPage == i)
                {
                    className = "active";
                }

                <li class="@className"><a href="/Facilities/FacilitiesPublic/SearchFacilities/@id?currentPage=@i">@i</a></li>
            }
            @if (Model.CurrentPage < Model.TotalPages)
            {
                <li>
                    <a href="/Facilities/FacilitiesPublic/SearchFacilities/@id?currentPage=@(Model.CurrentPage + 1)" aria-label="Next">&raquo;</a>
                </li>
            }

        </ul>
    </nav>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
