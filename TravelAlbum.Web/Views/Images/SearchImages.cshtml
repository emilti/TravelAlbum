@model TravelAlbum.Web.Models.ImageModels.ImagesListViewModel
@using TravelAlbum.Web.Enums
@using TravelAlbum.Resources.App_GlobalResources

<div class="search-container">
    @using (Html.BeginForm("SearchImages", "Images", null, FormMethod.Get, new { @class = "form-horizontal", role = "form" }))
    {
        <div class="search-group">
            @Html.EnumDropDownListFor(a => a.SelectedSorting, GlobalResources.SelectSortingLabel, new { @class = "form-control" })
        </div>

        <div class="search-group">
            @Html.DropDownListFor(a => a.SelectedPageSize, Model.PageSizes, GlobalResources.ShowPhotosLabel, new { @class = "form-control" })
        </div>
        <div class="search-group">
            @foreach (var g in Model.MountainsDropDown)
                {
                @*<div class="checkbox checkbox-primary checkbox-circle">
                        <input type="checkbox"
                               name="MountainsIds"
                               class="mountain-checkbox"
                               value="@g.Value" id="@g.Value" @if (Model.MountainsIds.Contains(new Guid(g.Value))) { <text> checked</text>
                               } />
                        <label class="label-mountain-checkbox" for="@g.Value">@g.Text</label>
                    </div>*@

                <div class="form-group">
                    <!--label class="custom-control custom-checkbox label-mountain-checkbox" for="@g.Value">
                        <input class="custom-control-input mountain-checkbox" type="checkbox" name="MountainsIds"
                               value="@g.Value" id="@g.Value" @if (Model.MountainsIds.Contains(new Guid(g.Value))) { <text> checked</text>
                               }>
                        <span class="custom-control-indicator"></span>
                        <span class="custom-control-description">@g.Text</span>                        
                    </label-->

                    <div class="checkbox checkbox-container">
                        <label class="label-mountain-checkbox" for="@g.Value">
                            <input  class="custom-control-input" type="checkbox" name="MountainsIds"
                               value="@g.Value" id="@g.Value" @if (Model.MountainsIds.Contains(new Guid(g.Value))) { <text> checked</text>
                               }>
                           @g.Text
                        </label>
                    </div>
                </div>
            }
        </div>
        <input class="btn btn-primary search-group submit-button" value="@GlobalResources.SearchButtonLabel" type="submit">
    }
</div>
<div style="width:50px"></div>





<div id="single-images-container">
    @if (Model != null && Model.ImagePreviews != null)
            {
                foreach (var image in Model.ImagePreviews)
                {
            <div class='single-image-container'>
                <a href="@Url.Action("Details", "Images", new { id = image.ImageId })">
                    <img class='single-image' src='data:image/jpg;base64,@image.ImageData' />
                    <div class='cover-container'>
                    </div>
                </a>
                <div class='description'> @Html.DisplayFor(a => image.CreatedOn) </div>
            </div>
        }
    }

</div>

@{
    string url = Request.RawUrl.ToString();
    var parts = url.Split('/').ToList();
    var lastPart = parts[parts.Count - 1].Split('?').ToList();
    var extractedLastPart = lastPart[0];
}
<div class="paging-container">
    <div class="centering">
        <ul class="pagination ">
            @{
                string mountains = string.Empty;
                foreach (var mountainId in Model.MountainsIds)
                {
                    mountains = mountains + "MountainsIds=" + mountainId + "&";
                }
                string sorting = "SelectedSorting=" + Model.SelectedSorting + "&";
                int previousPage = @Model.CurrentPage - 1;
                int nextPage = Model.CurrentPage + 1;
            }
            @if (Model.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="/Images/SearchImages/?@mountains@(sorting)CurrentPage=@(previousPage)&SelectedPageSize=@Model.SelectedPageSize" aria-label="Previous">&laquo;</a>
                </li>
            }

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                var className = string.Empty;
                if (Model.CurrentPage == i)
                {
                    className = "active";
                }


                <li class="page-item @className">
                    <a class="page-number page-link" href="/Images/SearchImages/?@mountains@(sorting)CurrentPage=@i&SelectedPageSize=@Model.SelectedPageSize">@i</a>
                </li>
            }
            @if (Model.CurrentPage < Model.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" href="/Images/SearchImages/?@mountains@(sorting)CurrentPage=@nextPage&SelectedPageSize=@Model.SelectedPageSize" aria-label="Next">&raquo;</a>
                </li>
            }
        </ul>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

