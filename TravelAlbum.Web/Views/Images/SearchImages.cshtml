@model TravelAlbum.Web.Models.ImageModels.ImagesListViewModel
@using TravelAlbum.Web.Enums
@using TravelAlbum.Resources.App_GlobalResources

<img src="@String.Format("data:image/jpg;base64,{0}", @Model.BackgroundData)"  id="bg" />

<div class="row content-container">
    <div class="col-md-2">
        @using (Html.BeginForm("SearchImages", "Images", null, FormMethod.Get, new { @class = "form-horizontal", role = "form" }))
        {
            <div class="search-group">
                @Html.EnumDropDownListFor(a => a.SelectedSorting, GlobalResources.SelectSortingLabel, new { @class = "form-control" })
            </div>

            <div class="search-group">
                @Html.DropDownListFor(a => a.SelectedPageSize, Model.PageSizes, GlobalResources.ShowPhotosLabel, new { @class = "form-control" })
            </div>
            <div class="search-group">
                @foreach (var g in Model.MountainsDropDown)
                {
                    <div class="form-group">
                        <div class="checkbox checkbox-container">
                            <label class="label-mountain-checkbox" for="@g.Value">
                                <input class="custom-control-input" type="checkbox" name="MountainsIds"
                                       value="@g.Value" id="@g.Value" @if (Model.MountainsIds.Contains(new Guid(g.Value))) { <text> checked</text>
                               }>
                                @g.Text
                            </label>
                        </div>
                    </div>
                }
            </div>
            <input class="btn btn-primary search-group submit-button" value="@GlobalResources.SearchButtonLabel" type="submit">
        }
    </div>
    <div id="single-images-container" class="col-md-10 text-center">

        @if (Model != null && Model.ImagePreviews != null)
            {
                foreach (var image in Model.ImagePreviews)
                {
                <div class="row">
                    <div class="col-md-2"></div>
                    <div class='col-md-8'>
                        <div class="single-image-container  text-center">
                            <img class='single-image' src='data:image/jpg;base64,@image.ImageData' />
                            <a href="@String.Format("data:image/jpg;base64,{0}", @image.ImageData)" id="single_image">
                                <div class='cover-container-left'>
                                </div>
                            </a>
                            <a href="@Url.Action("Details", "Images", new { id = image.ImageId })">
                                <div class='cover-container-right'>
                                </div>
                            </a>
                            <div class='description'>@Html.DisplayFor(a => image.CreatedOn)
                                @if (@image.Title != null && @image.Title != String.Empty) 
                                {<span>|</span> @image.Title 
                                }
                            </div>
                           
                        </div>
                    </div>
                    <div class="col-md-2"></div>
                </div>
            }
        }

    </div>
</div>
@{
    string url = Request.RawUrl.ToString();
    var parts = url.Split('/').ToList();
    var lastPart = parts[parts.Count - 1].Split('?').ToList();
    var extractedLastPart = lastPart[0];
}
<div class="paging-container">
    <div class="col-sm-offset-2 col-md-10 text-center">
        <ul class="pagination">
            @{
                string mountains = string.Empty;
                foreach (var mountainId in Model.MountainsIds)
                {
                    mountains = mountains + "MountainsIds=" + mountainId + "&";
                }
                string sorting = "SelectedSorting=" + Model.SelectedSorting + "&";
                int previousPage = @Model.CurrentPage - 1;
                int nextPage = Model.CurrentPage + 1;
            }
            @if (Model.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="/Images/SearchImages/?@mountains@(sorting)CurrentPage=@(previousPage)&SelectedPageSize=@Model.SelectedPageSize" aria-label="Previous">&laquo;</a>
                </li>
            }

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                var className = string.Empty;
                if (Model.CurrentPage == i)
                {
                    className = "active";
                }


                <li class="page-item @className">
                    <a class="page-number page-link" href="/Images/SearchImages/?@mountains@(sorting)CurrentPage=@i&SelectedPageSize=@Model.SelectedPageSize">@i</a>
                </li>
            }
            @if (Model.CurrentPage < Model.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" href="/Images/SearchImages/?@mountains@(sorting)CurrentPage=@nextPage&SelectedPageSize=@Model.SelectedPageSize" aria-label="Next">&raquo;</a>
                </li>
            }
        </ul>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

